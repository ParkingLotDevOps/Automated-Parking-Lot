{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"route\", \"focused\", \"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityState\", \"accessibilityStates\"],\n    _excluded2 = [\"position\", \"top\", \"left\", \"bottom\", \"right\", \"margin\", \"marginTop\", \"marginLeft\", \"marginBottom\", \"marginRight\", \"marginHorizontal\", \"marginVertical\", \"height\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getStatusBarHeight, getBottomSpace } from 'react-native-iphone-x-helper';\nimport { ThemeColors, ThemeContext } from 'react-navigation';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar DEFAULT_KEYBOARD_ANIMATION_CONFIG = {\n  show: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 150\n    }\n  },\n  hide: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 100\n    }\n  }\n};\n\nvar TouchableWithoutFeedbackWrapper = function (_React$Component) {\n  _inherits(TouchableWithoutFeedbackWrapper, _React$Component);\n\n  var _super = _createSuper(TouchableWithoutFeedbackWrapper);\n\n  function TouchableWithoutFeedbackWrapper() {\n    _classCallCheck(this, TouchableWithoutFeedbackWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TouchableWithoutFeedbackWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          route = _this$props.route,\n          focused = _this$props.focused,\n          onPress = _this$props.onPress,\n          onLongPress = _this$props.onLongPress,\n          testID = _this$props.testID,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          accessibilityRole = _this$props.accessibilityRole,\n          accessibilityState = _this$props.accessibilityState,\n          accessibilityStates = _this$props.accessibilityStates,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        onLongPress: onLongPress,\n        testID: testID,\n        hitSlop: {\n          left: 15,\n          right: 15,\n          top: 0,\n          bottom: 5\n        },\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityState: accessibilityState,\n        accessibilityStates: accessibilityStates\n      }, React.createElement(View, rest));\n    }\n  }]);\n\n  return TouchableWithoutFeedbackWrapper;\n}(React.Component);\n\nvar TabBarBottom = function (_React$Component2) {\n  _inherits(TabBarBottom, _React$Component2);\n\n  var _super2 = _createSuper(TabBarBottom);\n\n  function TabBarBottom() {\n    var _this;\n\n    _classCallCheck(this, TabBarBottom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"keyboardDidShowSubscription\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyboardDidHideSubscription\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"context\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_getKeyboardAnimationConfigByType\", function (type) {\n      var keyboardHidesTabBarAnimationConfig = _this.props.keyboardHidesTabBarAnimationConfig;\n      var defaultKeyboardAnimationConfig = DEFAULT_KEYBOARD_ANIMATION_CONFIG[type];\n      var keyboardAnimationConfig = (keyboardHidesTabBarAnimationConfig === null || keyboardHidesTabBarAnimationConfig === void 0 ? void 0 : keyboardHidesTabBarAnimationConfig[type]) || defaultKeyboardAnimationConfig;\n\n      if (keyboardAnimationConfig && keyboardAnimationConfig.animation === 'timing') {\n        return _objectSpread(_objectSpread(_objectSpread({}, defaultKeyboardAnimationConfig), keyboardAnimationConfig), {}, {\n          config: _objectSpread(_objectSpread({}, defaultKeyboardAnimationConfig.config), keyboardAnimationConfig.config)\n        });\n      }\n\n      return keyboardAnimationConfig;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyboardShow\", function () {\n      _this.setState({\n        keyboard: true\n      }, function () {\n        var _this$_getKeyboardAni = _this._getKeyboardAnimationConfigByType('show'),\n            animation = _this$_getKeyboardAni.animation,\n            config = _this$_getKeyboardAni.config;\n\n        Animated[animation](_this.state.visible, _objectSpread({\n          toValue: 0\n        }, config)).start();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyboardHide\", function () {\n      var _this$_getKeyboardAni2 = _this._getKeyboardAnimationConfigByType('hide'),\n          animation = _this$_getKeyboardAni2.animation,\n          config = _this$_getKeyboardAni2.config;\n\n      Animated[animation](_this.state.visible, _objectSpread({\n        toValue: 1\n      }, config)).start(function () {\n        _this.setState({\n          keyboard: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleLayout\", function (e) {\n      var layout = _this.state.layout;\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          height = _e$nativeEvent$layout.height,\n          width = _e$nativeEvent$layout.width;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      _this.setState({\n        layout: {\n          height: height,\n          width: width\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getActiveTintColor\", function () {\n      var activeTintColor = _this.props.activeTintColor;\n\n      if (!activeTintColor) {\n        return;\n      } else if (typeof activeTintColor === 'string') {\n        return activeTintColor;\n      }\n\n      return activeTintColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getInactiveTintColor\", function () {\n      var inactiveTintColor = _this.props.inactiveTintColor;\n\n      if (!inactiveTintColor) {\n        return;\n      } else if (typeof inactiveTintColor === 'string') {\n        return inactiveTintColor;\n      }\n\n      return inactiveTintColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getActiveBackgroundColor\", function () {\n      var activeBackgroundColor = _this.props.activeBackgroundColor;\n\n      if (!activeBackgroundColor) {\n        return;\n      } else if (typeof activeBackgroundColor === 'string') {\n        return activeBackgroundColor;\n      }\n\n      return activeBackgroundColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getInactiveBackgroundColor\", function () {\n      var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n\n      if (!inactiveBackgroundColor) {\n        return;\n      } else if (typeof inactiveBackgroundColor === 'string') {\n        return inactiveBackgroundColor;\n      }\n\n      return inactiveBackgroundColor[_this.context];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderLabel\", function (_ref) {\n      var route = _ref.route,\n          focused = _ref.focused;\n      var _this$props2 = _this.props,\n          labelStyle = _this$props2.labelStyle,\n          showLabel = _this$props2.showLabel,\n          showIcon = _this$props2.showIcon,\n          allowFontScaling = _this$props2.allowFontScaling;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var label = _this.props.getLabelText({\n        route: route\n      });\n\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n      var horizontal = _this._shouldUseHorizontalLabels();\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label({\n          focused: focused,\n          tintColor: tintColor,\n          orientation: horizontal ? 'horizontal' : 'vertical'\n        });\n      }\n\n      return label;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderIcon\", function (_ref2) {\n      var route = _ref2.route,\n          focused = _ref2.focused;\n      var _this$props3 = _this.props,\n          renderIcon = _this$props3.renderIcon,\n          showIcon = _this$props3.showIcon,\n          showLabel = _this$props3.showLabel;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = _this._shouldUseHorizontalLabels();\n\n      var activeTintColor = _this._getActiveTintColor();\n\n      var inactiveTintColor = _this._getInactiveTintColor();\n\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_shouldUseHorizontalLabels\", function () {\n      var routes = _this.props.navigation.state.routes;\n      var _this$props4 = _this.props,\n          isLandscape = _this$props4.isLandscape,\n          dimensions = _this$props4.dimensions,\n          adaptive = _this$props4.adaptive,\n          tabStyle = _this$props4.tabStyle,\n          labelPosition = _this$props4.labelPosition;\n\n      if (labelPosition) {\n        var position;\n\n        if (typeof labelPosition === 'string') {\n          position = labelPosition;\n        } else {\n          position = labelPosition({\n            deviceOrientation: isLandscape ? 'horizontal' : 'vertical'\n          });\n        }\n\n        if (position) {\n          return position === 'beside-icon';\n        }\n      }\n\n      if (!adaptive) {\n        return false;\n      }\n\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(TabBarBottom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS === 'ios') {\n        this.keyboardDidShowSubscription = Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n        this.keyboardDidHideSubscription = Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        this.keyboardDidShowSubscription = Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n        this.keyboardDidHideSubscription = Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$keyboardDidShow, _this$keyboardDidHide;\n\n      (_this$keyboardDidShow = this.keyboardDidShowSubscription) === null || _this$keyboardDidShow === void 0 ? void 0 : _this$keyboardDidShow.remove();\n      (_this$keyboardDidHide = this.keyboardDidHideSubscription) === null || _this$keyboardDidHide === void 0 ? void 0 : _this$keyboardDidHide.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          navigation = _this$props5.navigation,\n          keyboardHidesTabBar = _this$props5.keyboardHidesTabBar,\n          onTabPress = _this$props5.onTabPress,\n          onTabLongPress = _this$props5.onTabLongPress,\n          isLandscape = _this$props5.isLandscape,\n          safeAreaInset = _this$props5.safeAreaInset,\n          style = _this$props5.style,\n          tabStyle = _this$props5.tabStyle;\n      var routes = navigation.state.routes;\n      var isDark = this.context === 'dark';\n\n      var activeBackgroundColor = this._getActiveBackgroundColor();\n\n      var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n      var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n          position = _StyleSheet$flatten.position,\n          top = _StyleSheet$flatten.top,\n          _StyleSheet$flatten$l = _StyleSheet$flatten.left,\n          left = _StyleSheet$flatten$l === void 0 ? 0 : _StyleSheet$flatten$l,\n          _StyleSheet$flatten$b = _StyleSheet$flatten.bottom,\n          bottom = _StyleSheet$flatten$b === void 0 ? 0 : _StyleSheet$flatten$b,\n          _StyleSheet$flatten$r = _StyleSheet$flatten.right,\n          right = _StyleSheet$flatten$r === void 0 ? 0 : _StyleSheet$flatten$r,\n          margin = _StyleSheet$flatten.margin,\n          marginTop = _StyleSheet$flatten.marginTop,\n          marginLeft = _StyleSheet$flatten.marginLeft,\n          marginBottom = _StyleSheet$flatten.marginBottom,\n          marginRight = _StyleSheet$flatten.marginRight,\n          marginHorizontal = _StyleSheet$flatten.marginHorizontal,\n          marginVertical = _StyleSheet$flatten.marginVertical,\n          height = _StyleSheet$flatten.height,\n          innerStyle = _objectWithoutProperties(_StyleSheet$flatten, _excluded2);\n\n      var containerStyle = {\n        position: position,\n        top: top,\n        left: left,\n        bottom: bottom,\n        right: right,\n        margin: margin,\n        marginTop: marginTop,\n        marginLeft: marginLeft,\n        marginBottom: marginBottom,\n        marginRight: marginRight,\n        marginHorizontal: marginHorizontal,\n        marginVertical: marginVertical\n      };\n      var statusBarHeight = getStatusBarHeight(true);\n      var horizontalInset = isLandscape ? statusBarHeight : 0;\n      var insets = {\n        bottom: typeof (safeAreaInset === null || safeAreaInset === void 0 ? void 0 : safeAreaInset.bottom) === 'number' ? safeAreaInset.bottom : (safeAreaInset === null || safeAreaInset === void 0 ? void 0 : safeAreaInset.bottom) === 'never' ? 0 : getBottomSpace(),\n        left: typeof (safeAreaInset === null || safeAreaInset === void 0 ? void 0 : safeAreaInset.left) === 'number' ? safeAreaInset.left : (safeAreaInset === null || safeAreaInset === void 0 ? void 0 : safeAreaInset.left) === 'never' ? 0 : horizontalInset,\n        right: typeof (safeAreaInset === null || safeAreaInset === void 0 ? void 0 : safeAreaInset.right) === 'number' ? safeAreaInset.right : (safeAreaInset === null || safeAreaInset === void 0 ? void 0 : safeAreaInset.right) === 'never' ? 0 : horizontalInset\n      };\n      var tabBarStyle = [{\n        height: height != null ? typeof height === 'number' ? height + insets.bottom : height : (this._shouldUseHorizontalLabels() && !Platform.isPad ? COMPACT_HEIGHT : DEFAULT_HEIGHT) + insets.bottom,\n        paddingBottom: insets.bottom,\n        paddingLeft: insets.left,\n        paddingRight: insets.right\n      }, styles.tabBar, isDark ? styles.tabBarDark : styles.tabBarLight, innerStyle];\n      return React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, keyboardHidesTabBar ? {\n          transform: [{\n            translateY: this.state.visible.interpolate({\n              inputRange: [0, 1],\n              outputRange: [this.state.layout.height, 0]\n            })\n          }],\n          position: this.state.keyboard ? 'absolute' : position\n        } : null],\n        pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n        onLayout: this._handleLayout\n      }, React.createElement(View, {\n        style: tabBarStyle\n      }, routes.map(function (route, index) {\n        var focused = index === navigation.state.index;\n        var scene = {\n          route: route,\n          focused: focused\n        };\n\n        var accessibilityLabel = _this2.props.getAccessibilityLabel({\n          route: route\n        });\n\n        var accessibilityRole = _this2.props.getAccessibilityRole({\n          route: route\n        });\n\n        var accessibilityStates = _this2.props.getAccessibilityStates(scene);\n\n        var testID = _this2.props.getTestID({\n          route: route\n        });\n\n        var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n        var ButtonComponent = _this2.props.getButtonComponent({\n          route: route\n        }) || TouchableWithoutFeedbackWrapper;\n        return React.createElement(ButtonComponent, {\n          key: route.key,\n          route: route,\n          focused: focused,\n          onPress: function onPress() {\n            return onTabPress({\n              route: route\n            });\n          },\n          onLongPress: function onLongPress() {\n            return onTabLongPress({\n              route: route\n            });\n          },\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: accessibilityRole,\n          accessibilityStates: accessibilityStates,\n          style: [styles.tab, {\n            backgroundColor: backgroundColor\n          }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle]\n        }, _this2._renderIcon(scene), _this2._renderLabel(scene));\n      })));\n    }\n  }]);\n\n  return TabBarBottom;\n}(React.Component);\n\n_defineProperty(TabBarBottom, \"defaultProps\", {\n  keyboardHidesTabBar: true,\n  keyboardHidesTabBarAnimationConfig: DEFAULT_KEYBOARD_ANIMATION_CONFIG,\n  activeTintColor: {\n    light: '#007AFF',\n    dark: '#fff'\n  },\n  inactiveTintColor: {\n    light: '#8e8e93',\n    dark: '#7f7f7f'\n  },\n  activeBackgroundColor: 'transparent',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n});\n\n_defineProperty(TabBarBottom, \"contextType\", ThemeContext);\n\nvar styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder\n  },\n  container: {\n    elevation: 8\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["majorVersion","parseInt","Platform","isIos","isIOS11","DEFAULT_HEIGHT","COMPACT_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","DEFAULT_KEYBOARD_ANIMATION_CONFIG","show","animation","config","useNativeDriver","duration","hide","React","render","rest","left","right","top","bottom","accessibilityStates","TabBarBottom","keyboardHidesTabBar","keyboardHidesTabBarAnimationConfig","activeTintColor","light","dark","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","showIcon","allowFontScaling","adaptive","safeAreaInset","ThemeContext","layout","height","width","keyboard","visible","Animated","componentDidMount","Keyboard","componentWillUnmount","type","defaultKeyboardAnimationConfig","keyboardAnimationConfig","toValue","e","focused","label","route","tintColor","horizontal","styles","color","orientation","activeOpacity","inactiveOpacity","routes","labelPosition","position","deviceOrientation","isLandscape","maxTabItemWidth","flattenedStyle","StyleSheet","dimensions","tabStyle","navigation","isDark","innerStyle","style","containerStyle","margin","marginTop","marginLeft","marginBottom","marginRight","marginHorizontal","marginVertical","statusBarHeight","getStatusBarHeight","horizontalInset","insets","getBottomSpace","tabBarStyle","paddingBottom","paddingLeft","paddingRight","transform","translateY","inputRange","outputRange","_handleLayout","index","scene","accessibilityLabel","accessibilityRole","testID","backgroundColor","ButtonComponent","onTabPress","onTabLongPress","tabBar","borderTopWidth","flexDirection","tabBarLight","ThemeColors","borderTopColor","headerBorder","tabBarDark","container","elevation","tab","flex","alignItems","tabPortrait","justifyContent","tabLandscape","iconWithoutLabel","iconWithLabel","iconWithExplicitHeight","textAlign","labelBeneath","fontSize","labelBeside","withDimensions"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  EmitterSubscription,\n} from 'react-native';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\nimport { ThemeColors, ThemeContext, NavigationRoute } from 'react-navigation';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\nimport {\n  BottomTabBarProps,\n  ButtonComponentProps,\n  KeyboardHidesTabBarAnimationConfig,\n  KeyboardAnimationConfig,\n} from '../types';\n\ntype State = {\n  layout: { height: number; width: number };\n  keyboard: boolean;\n  visible: Animated.Value;\n};\n\nconst majorVersion = parseInt(Platform.Version as string, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst DEFAULT_KEYBOARD_ANIMATION_CONFIG: KeyboardHidesTabBarAnimationConfig = {\n  show: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 150,\n    },\n  },\n  hide: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 100,\n    },\n  },\n};\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<\n  ButtonComponentProps\n> {\n  render() {\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      route,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      focused,\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityState,\n      accessibilityStates,\n      ...rest\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityState={accessibilityState}\n        // @ts-expect-error: support older RN versions\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...rest} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<BottomTabBarProps, State> {\n  static defaultProps = {\n    keyboardHidesTabBar: true,\n    keyboardHidesTabBarAnimationConfig: DEFAULT_KEYBOARD_ANIMATION_CONFIG,\n    activeTintColor: {\n      light: '#007AFF',\n      dark: '#fff',\n    },\n    inactiveTintColor: {\n      light: '#8e8e93',\n      dark: '#7f7f7f',\n    },\n    activeBackgroundColor: 'transparent',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' } as const,\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  static contextType = ThemeContext;\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  keyboardDidShowSubscription: EmitterSubscription | null = null;\n  keyboardDidHideSubscription: EmitterSubscription | null = null;\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      this.keyboardDidShowSubscription = Keyboard.addListener(\n        'keyboardWillShow',\n        this._handleKeyboardShow\n      );\n      this.keyboardDidHideSubscription = Keyboard.addListener(\n        'keyboardWillHide',\n        this._handleKeyboardHide\n      );\n    } else {\n      this.keyboardDidShowSubscription = Keyboard.addListener(\n        'keyboardDidShow',\n        this._handleKeyboardShow\n      );\n      this.keyboardDidHideSubscription = Keyboard.addListener(\n        'keyboardDidHide',\n        this._handleKeyboardHide\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.keyboardDidShowSubscription?.remove();\n    this.keyboardDidHideSubscription?.remove();\n  }\n\n  // @ts-ignore\n  context: 'light' | 'dark';\n\n  _getKeyboardAnimationConfigByType = (\n    type: keyof KeyboardHidesTabBarAnimationConfig\n  ): KeyboardAnimationConfig => {\n    const { keyboardHidesTabBarAnimationConfig } = this.props;\n    const defaultKeyboardAnimationConfig =\n      DEFAULT_KEYBOARD_ANIMATION_CONFIG[type];\n    const keyboardAnimationConfig =\n      keyboardHidesTabBarAnimationConfig?.[type] ||\n      defaultKeyboardAnimationConfig;\n\n    // merge config only `timing` animation\n    if (\n      keyboardAnimationConfig &&\n      keyboardAnimationConfig.animation === 'timing'\n    ) {\n      return {\n        ...defaultKeyboardAnimationConfig,\n        ...keyboardAnimationConfig,\n        config: {\n          ...defaultKeyboardAnimationConfig.config,\n          ...keyboardAnimationConfig.config,\n        },\n      };\n    }\n\n    return keyboardAnimationConfig as KeyboardAnimationConfig;\n  };\n\n  _handleKeyboardShow = () => {\n    this.setState({ keyboard: true }, () => {\n      const { animation, config } = this._getKeyboardAnimationConfigByType(\n        'show'\n      );\n      // @ts-expect-error\n      Animated[animation](this.state.visible, {\n        toValue: 0,\n        ...config,\n      }).start();\n    });\n  };\n\n  _handleKeyboardHide = () => {\n    const { animation, config } = this._getKeyboardAnimationConfigByType(\n      'hide'\n    );\n    // @ts-expect-error\n    Animated[animation](this.state.visible, {\n      toValue: 1,\n      ...config,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n  };\n\n  _handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  _renderLabel = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { labelStyle, showLabel, showIcon, allowFontScaling } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({\n        focused,\n        tintColor,\n        orientation: horizontal ? 'horizontal' : 'vertical',\n      });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { renderIcon, showIcon, showLabel } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const {\n      isLandscape,\n      dimensions,\n      adaptive,\n      tabStyle,\n      labelPosition,\n    } = this.props;\n\n    if (labelPosition) {\n      let position;\n      if (typeof labelPosition === 'string') {\n        position = labelPosition;\n      } else {\n        position = labelPosition({\n          deviceOrientation: isLandscape ? 'horizontal' : 'vertical',\n        });\n      }\n\n      if (position) {\n        return position === 'beside-icon';\n      }\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    // @ts-ignore\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      isLandscape,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n    const isDark = this.context === 'dark';\n\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    const {\n      position,\n      top,\n      left = 0,\n      bottom = 0,\n      right = 0,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical,\n      height,\n      ...innerStyle\n    } = StyleSheet.flatten(style || {});\n\n    const containerStyle = {\n      position,\n      top,\n      left,\n      bottom,\n      right,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical,\n    };\n\n    const statusBarHeight = getStatusBarHeight(true);\n    const horizontalInset = isLandscape ? statusBarHeight : 0;\n    const insets = {\n      bottom:\n        typeof safeAreaInset?.bottom === 'number'\n          ? safeAreaInset.bottom\n          : safeAreaInset?.bottom === 'never'\n          ? 0\n          : getBottomSpace(),\n      left:\n        typeof safeAreaInset?.left === 'number'\n          ? safeAreaInset.left\n          : safeAreaInset?.left === 'never'\n          ? 0\n          : horizontalInset,\n      right:\n        typeof safeAreaInset?.right === 'number'\n          ? safeAreaInset.right\n          : safeAreaInset?.right === 'never'\n          ? 0\n          : horizontalInset,\n    };\n\n    const tabBarStyle = [\n      {\n        height:\n          height != null\n            ? typeof height === 'number'\n              ? height + insets.bottom\n              : height\n            : // @ts-ignore: isPad exists in runtime but not available in type defs\n              (this._shouldUseHorizontalLabels() && !Platform.isPad\n                ? COMPACT_HEIGHT\n                : DEFAULT_HEIGHT) + insets.bottom,\n        paddingBottom: insets.bottom,\n        paddingLeft: insets.left,\n        paddingRight: insets.right,\n      },\n      styles.tabBar,\n      isDark ? styles.tabBarDark : styles.tabBarLight,\n      innerStyle,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          containerStyle,\n          keyboardHidesTabBar\n            ? {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : position,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <View style={tabBarStyle}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                route={route}\n                focused={focused}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder,\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder,\n  },\n  container: {\n    elevation: 8,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    // @ts-ignore\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}